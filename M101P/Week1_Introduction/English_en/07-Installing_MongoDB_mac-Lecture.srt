1
00:00:00,000 --> 00:00:00,200

2
00:00:00,200 --> 00:00:02,820
Now we're going to go over
installing MongoDB.

3
00:00:02,820 --> 00:00:05,620
I'm going to show you how to
install MongoDB on a Mac.

4
00:00:05,620 --> 00:00:08,790
And then, in a separate segment,
we're going to have

5
00:00:08,790 --> 00:00:11,640
Dwight Merriman, our CEO
co-founder, showing you how to

6
00:00:11,640 --> 00:00:14,040
install MongoDB on a PC.

7
00:00:14,040 --> 00:00:17,000
He's more of a PC guy, and
I'm more of a Mac guy.

8
00:00:17,000 --> 00:00:19,960
And the installation is the same
for both the DBA course

9
00:00:19,960 --> 00:00:22,220
and the developer course, so
we're taking that segment from

10
00:00:22,220 --> 00:00:23,760
the DBA course.

11
00:00:23,760 --> 00:00:25,620
All right, so how do you
install MongoDB.

12
00:00:25,620 --> 00:00:26,910
It's pretty simple.

13
00:00:26,910 --> 00:00:28,810
We'll start with
a web browser.

14
00:00:28,810 --> 00:00:31,180
And we're going to search
for how to find it.

15
00:00:31,180 --> 00:00:34,560
I'm going to type download
MongoDB.

16
00:00:34,560 --> 00:00:36,335
Let's see where that
brings us.

17
00:00:36,335 --> 00:00:38,385
And you can see that
that brings us to

18
00:00:38,385 --> 00:00:40,325
www.mongodb.org/downloads.

19
00:00:40,325 --> 00:00:43,215
When we get there, there's a
whole bunch of choices that

20
00:00:43,215 --> 00:00:44,480
are listed.

21
00:00:44,480 --> 00:00:49,670
Including ones for OS X 32-bit,
64-bit, and a bunch of

22
00:00:49,670 --> 00:00:51,210
other operating systems.

23
00:00:51,210 --> 00:00:53,830
We're going to go over
the OS X install.

24
00:00:53,830 --> 00:00:56,590
The first row here, the 220
release, that is the

25
00:00:56,590 --> 00:00:59,920
production release, and the one
we're going to go after.

26
00:00:59,920 --> 00:01:03,000
This is a release candidate
over here, and lower down,

27
00:01:03,000 --> 00:01:05,140
there's some other development
releases, and older release

28
00:01:05,140 --> 00:01:06,430
that you can look at.

29
00:01:06,430 --> 00:01:08,730
Normally, you want to go for the
64-bit release, especially

30
00:01:08,730 --> 00:01:13,390
on OS X, because most
OS X are 64-bit.

31
00:01:13,390 --> 00:01:16,990
And MongoDB is limited to two
gigabytes of data in the

32
00:01:16,990 --> 00:01:20,550
32-bit version because it uses
memory mapped files.

33
00:01:20,550 --> 00:01:21,870
That's fine for development.

34
00:01:21,870 --> 00:01:24,820
That's fine for small projects,
but normally you'd

35
00:01:24,820 --> 00:01:27,100
probably want to download
the 64-bit version.

36
00:01:27,100 --> 00:01:29,850
So I'm going to go ahead and
download the 64-bit version.

37
00:01:29,850 --> 00:01:31,760
It's a little bit offscreen in
terms of what it's doing.

38
00:01:31,760 --> 00:01:35,220
But it's downloading about
a 60 megabyte download.

39
00:01:35,220 --> 00:01:37,410
And that's going to show up in
our downloads directory.

40
00:01:37,410 --> 00:01:39,370
And so we're going to switch to
that now, and I'll show you

41
00:01:39,370 --> 00:01:40,880
the downloads directory.

42
00:01:40,880 --> 00:01:41,820
So this is a Mac.

43
00:01:41,820 --> 00:01:44,510
If I want to go to the download
directory, I'd go to

44
00:01:44,510 --> 00:01:46,510
cd ~/downloads.

45
00:01:46,510 --> 00:01:49,145
And what I see there is,
I see the download.

46
00:01:49,145 --> 00:01:50,960
It's actually a couple versions
in here because I've

47
00:01:50,960 --> 00:01:53,220
been downloading it over and
over while I record this.

48
00:01:53,220 --> 00:01:56,630
But I'm just going to go for the
one that's completed and I

49
00:01:56,630 --> 00:01:59,130
want to untar it
using tar xvf,

50
00:01:59,130 --> 00:02:03,410
mongodb-osx-x86-64-bit.tgz.

51
00:02:03,410 --> 00:02:04,180
All right?

52
00:02:04,180 --> 00:02:07,160
Untar that file and see it
impacts it right into the

53
00:02:07,160 --> 00:02:08,580
current director here.

54
00:02:08,580 --> 00:02:10,949
And now I'm going to go into
that directory and see what

55
00:02:10,949 --> 00:02:12,110
there is to see.

56
00:02:12,110 --> 00:02:14,860
And I see that there's a readme
file, and a license,

57
00:02:14,860 --> 00:02:17,090
and there's a binary
directory.

58
00:02:17,090 --> 00:02:19,970
And that binary directory
contains all the executables

59
00:02:19,970 --> 00:02:21,540
I'm going to need
to run Mongo.

60
00:02:21,540 --> 00:02:23,160
The ones we're going to focus
on right now, we're going to

61
00:02:23,160 --> 00:02:26,310
focus on this mongod executable,
which is the

62
00:02:26,310 --> 00:02:28,620
server, and then we'll look a
little bit the mongo shell,

63
00:02:28,620 --> 00:02:30,770
which connects to the server,
so you could perform some

64
00:02:30,770 --> 00:02:33,290
administrative commands and
insert some data, and look at

65
00:02:33,290 --> 00:02:35,510
data, which I've showed
you previously.

66
00:02:35,510 --> 00:02:40,440
So normally, mongod puts
its data in /data/db.

67
00:02:40,440 --> 00:02:42,810
If we just try to run it, it
should come up with an error

68
00:02:42,810 --> 00:02:46,220
message saying that it cannot
find that directory.

69
00:02:46,220 --> 00:02:48,040
Yep, can't find that
directory.

70
00:02:48,040 --> 00:02:51,070
It says you can use --dbpath
to use an alternative

71
00:02:51,070 --> 00:02:53,060
directory, but we just want
to use the standard one.

72
00:02:53,060 --> 00:02:55,030
So I'm going to show you
how to set that up.

73
00:02:55,030 --> 00:02:56,200
So I'm going to open
a different

74
00:02:56,200 --> 00:02:57,870
terminal window here.

75
00:02:57,870 --> 00:03:01,740
And I'm going to become root,
which I need to become to

76
00:03:01,740 --> 00:03:04,480
touch the slash directory
of my disk.

77
00:03:04,480 --> 00:03:06,750
And I'm going to create
a /data directory.

78
00:03:06,750 --> 00:03:08,770
And then I'm going to
create a /data/db db

79
00:03:08,770 --> 00:03:11,410
directory that's mkdir.

80
00:03:11,410 --> 00:03:14,090
And then I'm just going to
make sure I can write it.

81
00:03:14,090 --> 00:03:18,590
I'm going to chmod to world
writable, slash data slash db.

82
00:03:18,590 --> 00:03:20,820
And then I'm just going to look
at it to confirm that it

83
00:03:20,820 --> 00:03:23,660
has the permissions I expect,
which it does.

84
00:03:23,660 --> 00:03:26,370
It's owned by root but it's
actually world writable.

85
00:03:26,370 --> 00:03:28,340
In a production environment,
you might want to have some

86
00:03:28,340 --> 00:03:29,040
more permissions.

87
00:03:29,040 --> 00:03:30,640
But we're just in a development
environment here,

88
00:03:30,640 --> 00:03:32,500
so that's fine.

89
00:03:32,500 --> 00:03:34,290
So now that we have this
directory, and it's world

90
00:03:34,290 --> 00:03:36,510
writeable, we should be
able to start mongod.

91
00:03:36,510 --> 00:03:39,830
So I'm going to go back to
the previous window.

92
00:03:39,830 --> 00:03:41,190
This is just the terminal
window.

93
00:03:41,190 --> 00:03:44,420
And I'm now going
to start mongod.

94
00:03:44,420 --> 00:03:45,400
And there we go.

95
00:03:45,400 --> 00:03:46,350
It's started.

96
00:03:46,350 --> 00:03:47,460
This is the log for mongod.

97
00:03:47,460 --> 00:03:49,320
It's warning us about
a few things.

98
00:03:49,320 --> 00:03:51,550
It's warning us that our soft
r limits are too low.

99
00:03:51,550 --> 00:03:53,570
That's important for production
in terms of number

100
00:03:53,570 --> 00:03:55,790
of processes that can connect,
but it's not important for

101
00:03:55,790 --> 00:03:57,370
development, so we're not
to worry about it.

102
00:03:57,370 --> 00:04:00,270
And it's telling you that
it's putting its data in

103
00:04:00,270 --> 00:04:02,180
/db/journal.

104
00:04:02,180 --> 00:04:05,370
And then it's listing on this
port 27017, which is

105
00:04:05,370 --> 00:04:07,870
absolutely fine, that's
a standard port.

106
00:04:07,870 --> 00:04:09,330
Now we're going to
connect to it.

107
00:04:09,330 --> 00:04:10,620
We're going to go here.

108
00:04:10,620 --> 00:04:12,870
Make sure I'm not root.

109
00:04:12,870 --> 00:04:14,490
I do not seem to be root.

110
00:04:14,490 --> 00:04:16,910
And I know into my download
directory.

111
00:04:16,910 --> 00:04:20,610
And I'm going to find that
Mongo release expanded.

112
00:04:20,610 --> 00:04:23,910
I'm going to bin, and I'm
going to then run Mongo.

113
00:04:23,910 --> 00:04:25,970
Notice that, just a small thing,
I mean, for those of

114
00:04:25,970 --> 00:04:28,460
you who've used Unix before, you
know this, but I ran it by

115
00:04:28,460 --> 00:04:31,620
typing ./mongo versus
just Mongo.

116
00:04:31,620 --> 00:04:34,830
This way if I have a surge
past set on my machine, I

117
00:04:34,830 --> 00:04:36,555
don't want to find a different
instance of the binary than

118
00:04:36,555 --> 00:04:37,270
the one I expect.

119
00:04:37,270 --> 00:04:39,360
So this will specify that the
one I'm going to get is the

120
00:04:39,360 --> 00:04:41,690
one in this directory,
which is what I want.

121
00:04:41,690 --> 00:04:42,850
So I'm going to run that.

122
00:04:42,850 --> 00:04:45,600
It's going to connect, it
actually automatically

123
00:04:45,600 --> 00:04:48,210
connected to the test database,
which is fine.

124
00:04:48,210 --> 00:04:52,710
And I'm now going to create a
names collection by using it.

125
00:04:52,710 --> 00:04:56,130
I'm going to save a very small
document in it with my name.

126
00:04:56,130 --> 00:04:59,170
And now I'm going to do a
names.find to make sure that

127
00:04:59,170 --> 00:05:00,420
it's there.

128
00:05:00,420 --> 00:05:02,670
And there's a document
I just inserted.

129
00:05:02,670 --> 00:05:06,640
So now we've got one document
in the names collection, and

130
00:05:06,640 --> 00:05:10,140
that document has a name, my
name, right here, and it

131
00:05:10,140 --> 00:05:12,360
assigned an object ID
to the document.

132
00:05:12,360 --> 00:05:16,250
And now Mongo is up and
running on my Mac.

133
00:05:16,250 --> 00:05:17,817